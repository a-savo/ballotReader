root[1]
root[1:2]
root[1:5]
root$VoterTurnout
View(detaildf)
root[5]
xmlToDataFrame(root[5])
root[5][1]
xmlToDataFrame(test, nodes = "VoterTurnout")
xmlToDataFrame(test, homogenous = TRUE, nodes = "VoterTurnout")
xmlToDataFrame("detail.xml", nodes = "VoterTurnout")
xmlToDataFrame(xmlRoot("detail.xml"), nodes = "VoterTurnout")
xmlToDataFrame(nodes = xmlChildren(xmlRoot(test)[["data"]]))
write.csv
?write.csv
unzip("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip")
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip")
?download.file
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","Ossof")
temp <- tempfile()
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip",temp)
data <- read.table(unz(temp, "a1.dat"))
temp
unlink(temp)
getwd
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip",temp)
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","GA06.zip")
?unzip
data <- unzip("GA06.zip")
data
unzip("GA06.zip")
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","GA06.zip")
unzip("GA06.zip")
library(readxl)
?read_xls
?readxl_example
read_excel()
?read_excel
?excel_sheets
excel_sheets("detail.xls")
read_excel("detail.xls", sheet = 3)
read_excel("detail.xlsx", sheet = 3)
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","GA06.zip", mode = 'wb')
unzip("GA06.zip")
read_excel("detail.xlsx", sheet = 3)
readr::read_tsv("detail.xls")
read_excel("G:\My Drive\Y3\S2\Political Programming\github\ballotReader\NJelex\detail.xlsx", sheet = 3)
read_excel("G:/My Drive/Y3/S2/Political Programming/github/ballotReader/NJelex/detail.xlsx", sheet = 3)
read_excel("G:/My Drive/Y3/S2/Political Programming/github/ballotReader/NJelex/detail.xls", sheet = 3)
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","GA06.zip", mode = "wb")
unzip("GA06.zip")
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","GA06.zip", mode = "wb")
download.file("https://results.enr.clarityelections.com/GA/70059/187898/reports/detailxls.zip","GA06.zip", mode = "wb")
read_excel("G:/My Drive/Y3/S2/Political Programming/github/ballotReader/NJelex/detail.xls", sheet = 3)
readr::read_tsv("detail.xls")
read.xls("detail.xls")
library(gdata)
install.packages("gdata")
install.packages("gdata")
library(gdata)
read.xls("detail.xls")
library(RODBC)
odbcConnectExcel("detail.xls")
?read-tsv
?read_tsv
library(tidyverse)
?read_tsv
read.table("detail.xls")
?read.table
read.csv("detail.xls")
read.csv("detail.xls", sep = "\t")
read_excel("GA06.zip")
library(readxl)
read_excel("GA06.zip")
library(XML)
xmlToDataFrame("detail.xls")
glouc <- "http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/eb01/detailxls.zip"
download.file(glouc,"glouc.zip", mode = "wb")
glouc <- "http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/reports/detailxls.zip"
download.file(glouc,"glouc.zip", mode = "wb")
unzip("glouc.zip")
unzip("glouc.zip")
xmlToDataFrame("detail.xml")
xmlToDataFrame("detail_1.xml")
test <- xmlParse("detail.xml")
test
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/datainfo/data/item"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test))
detaildf<-xmlToDataFrame(nodes = "Contest")
detaildf<-xmlToDataFrame(test)
library(xml2)
xml2
?xml2
xml_structure(test)
xml_structure("detail.xml")
x <- "detail.xml"
xmlTree(x)
xmlTreeParse(x)
xmlTreeParse(x, useInternalNodes = TRUE)
test2 <- xmlTreeParse(x, useInternalNodes = TRUE)
xmlRoot(test2)
xmlRoot(test2)[1:5]
xmlRoot(test2)[1:2]
xmlRoot(test2)[1:4]
xmlRoot(test2)[1:5]
xmlRoot(test2)[1:6]
xmlName(test2)
root <- xmlRoot(test2)
xmlName(root)
read_xml(x)
test <- read_xml(x)
xml_find_all(pg, "\\record")
xml_find_all(test, "\\record")
xml_find_all(test, "\\Contest")
xml_find_all(test, "\\Precinct")
xml_find_all(test, "\\Precincts")
pg <- read_xml("http://www.ggobi.org/book/data/olive.xml")
pg
View(pg)
View(test)
recs <- xml_find_all(pg, "//record")
recs
xml_find_all(test, "\\VoteType")
xml_find_all(test, "\\Choice")
xml_find_all(test, "\\Contest")
xml_name(test)
xml_children(test)
library(rvest)
rvest
??rvest
install.packages("rvest")
install.packages("rvest")
library(rvest)
??rvest
library(XML)
test <- xmlParse("detail.xml")
head(test)
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/Contest/Choice/VoteType/Precinct"))
detaildf
tides = system.file("exampleData","tides.xml", package="XML")
tides.str<-xmlParse(tides)
View(tides.str)
tides.str
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType/Precinct"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/VoterTurnout"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/VoterTurnout\Precinct"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/VoterTurnout/Precinct"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/VoterTurnout/Precincts"))
detaildf
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/VoterTurnout/Precincts/Precinct"))
tides.str
test
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf
tides.str
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType/Precinct"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contestt"))
detaildf<-xmlToDataFrame(nodes = getNodeSet(test, "/ElectionResult/Contest"))
xmlRoot("detail.xml")
?xmlToDataFrame
detaildf<-xmlToDataFrame(homogeneous = TRUE, nodes = getNodeSet(test, "/ElectionResult/Contest"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = TRUE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = TRUE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType/Precinct"))
detaildf<-xmlToDataFrame(homogeneous = False, nodes = getNodeSet(test, "/ElectionResult/Contest"))
detaildf<-xmlToDataFrame(homogeneous = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest"))
detaildf<-xmlToDataFrame(homogeneous = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType/Precinct"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf
View(detaildf)
View(detaildf)
detaildf<-xmlToDataFrame(collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf<-xmlToDataFrame(collectNames = TRUE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice/VoteType"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest/Choice"))
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult/Contest"))
detaildf
detaildf<-xmlToDataFrame(homogeneous = TRUE, collectNames = FALSE, nodes = getNodeSet(test, "/ElectionResult\"))
))))
)
/
>
end()
\\\
////
_)))
>
library(tidyverse)
x <- "detail.txt"
x
readLines(x)
start <- grep("^[[:digit:]]+$", x)
mark <- vector('integer', length(x))
mark[start] <- 1
mark <- cumsum(mark)
df <- lapply(split(x, mark), function(.data){
.input <- read.table(textConnection(.data), skip=2, header=TRUE)
attr(.input, 'name') <- .data[2]  # save the name
.input
})
df <- lapply(split(x, mark), function(.data){
.input <- read.table(.data, skip=2, header=TRUE)
attr(.input, 'name') <- .data[2]  # save the name
.input
})
library(tabulizer)
?extract_tables
?as.data.frame
extract_tables("http://www.essexclerk.com/_Content/pdf/ElectionResult/DEM_SOV_2017.pdf", pages = c(14:16))
test <- extract_tables("http://www.essexclerk.com/_Content/pdf/ElectionResult/DEM_SOV_2017.pdf", pages = c(14:16))
View(test[[1]])
View(test[[2]])
View(test[[3]])
as.data.frame(test)
as.data.frame(test[1])
as.data.frame(test[[1]])
length(test)
View(as.data.frame(test[[1]]))
names <- c("Registration","Ballots Cast","Turnout (%)","Richard CODEY","Write-In")
names <- c("Muncipality",Registration","Ballots Cast","Turnout (%)","Richard CODEY","Write-In")
names <- c("Municipality","Registration","Ballots Cast","Turnout (%)","Richard CODEY","Write-In")
as.data.frame(test[[1]], col.names = names)
data <- as.data.frame(test[[1]])
names(data)
names(data) <- names
data
test[-length(test)]
test[[1[-length(test[[1]])]
test[[1[-length(test[[1]])]\]]]]]]]]]]]]
test[[1]][-length(test[[1]])]
test[[1]]
test[[1]][-ncol(test)]
test[[1]][-ncol(test[[1]])]
data
data[-length(data)]
read_vertical_results <- function(url, range = NULL, colnames = NULL) {
pages <- tabulizer::extract_tables(url, pages = range)
elex <- list()
for (i in 1:length(df)) {
df <- as.data.frame(df[[i]])
df <- df[-length(df)]
elex[[i]] <- df
}
all_elex <- as.data.frame(do.call("rbind", elex), stringsAsFactors = FALSE)
all_elex
}
read_vertical_results <- function(url, range, colnames) {
pages <- tabulizer::extract_tables(url, pages = range)
elex <- list()
for (i in 1:length(df)) {
df <- as.data.frame(df[[i]])
name(df) <- colnames
df <- df[-length(df)]
elex[[i]] <- df
}
all_elex <- as.data.frame(do.call("rbind", elex), stringsAsFactors = FALSE)
all_elex
}
names
essex <- "http://www.essexclerk.com/_Content/pdf/ElectionResult/DEM_SOV_2017.pdf"
read_vertical_results(essex, c(14:16), names)
read_vertical_results <- function(url, range, colnames) {
pages <- tabulizer::extract_tables(url, pages = range)
elex <- list()
for (i in 1:length(pages)) {
df <- as.data.frame(pages[[i]])
name(df) <- colnames
df <- df[-length(df)]
elex[[i]] <- df
}
all_elex <- as.data.frame(do.call("rbind", elex), stringsAsFactors = FALSE)
all_elex
}
read_vertical_results(essex, c(14:16), names)
read_vertical_results <- function(url, range, colnames) {
pages <- tabulizer::extract_tables(url, pages = range)
elex <- list()
for (i in 1:length(pages)) {
df <- as.data.frame(pages[[i]])
names(df) <- colnames
df <- df[-length(df)]
elex[[i]] <- df
}
all_elex <- as.data.frame(do.call("rbind", elex), stringsAsFactors = FALSE)
all_elex
}
read_vertical_results(essex, c(14:16), names)
View(read_vertical_results(essex, c(14:16), names))
document()
library(devtools)
library(roxygen2)
document()
?gather
mydata <- read_vertical_results(essex, c(14:16), names)
mydata
gather(mydata, key = "Vote Choice", value = "Vote", -1)
extract_tables("https://atlanticcountyclerk.org/wp-content/uploads/2017/12/General-Election-Results-2017-1.pdf")
?gather
?replace
fill_na <- function(df) {
df <- replace(df,. == "", NA)
df
}
data <- read_vertical_results(essex, c(14:16), names)
fill_na(data)
fill_na <- function(df) {
`%>%` <- magrittr::`%>%`
df <- df %>%
replace(. == "", NA)
}
fill_na(data)
fill_na <- function(df) {
`%>%` <- magrittr::`%>%`
df <- df %>%
replace(. == "", NA)
df
}
fill_na(data)
View(fill_na(data))
read_vertical_results <- function(file, range, colnames) {
`%>%` <- magrittr::`%>%`
pages <- tabulizer::extract_tables(file, pages = range)
elex <- list()
for (i in 1:length(pages)) {
df <- as.data.frame(pages[[i]])
names(df) <- colnames
df <- df[-length(df)]
elex[[i]] <- df
}
all_elex <- as.data.frame(do.call("rbind", elex), stringsAsFactors = FALSE)
all_elex <- all_elex %>%
tidyverse::gather(key = "Vote Choice", value = "Votes", -1) %>%
fill_na() %>%
na.omit()
all_elex
}
data <- read_vertical_results(essex, c(14:16), names)
?gather
read_vertical_results <- function(file, range, colnames) {
`%>%` <- magrittr::`%>%`
pages <- tabulizer::extract_tables(file, pages = range)
elex <- list()
for (i in 1:length(pages)) {
df <- as.data.frame(pages[[i]])
names(df) <- colnames
df <- df[-length(df)]
elex[[i]] <- df
}
all_elex <- as.data.frame(do.call("rbind", elex), stringsAsFactors = FALSE)
all_elex <- all_elex %>%
tidyr::gather(key = "Vote Choice", value = "Votes", -1) %>%
fill_na() %>%
na.omit()
all_elex
}
data <- read_vertical_results(essex, c(14:16), names)
View(data)
?unzip
myfile <- "http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/reports/summary.zip"
read_clarity <- function(url, destfile) {
download.file(url, destfile)
unzip(destfile)
}
read_clarity(myfile, "GA.zip")
read_csv("summary.csv")
library(readxl)
read_excel("detail.xls.xml")
library(XML)
xmlToDataFrame("detail.xls.xml")
test <- xmlParse("detail.xml")
test
xml_data <- xmlToList(data)
xml_data <- xmlToList(test)
xml_data
xml_data[["contest"]]
xml_data[["Contest"]]
xml_data[["Contest"]][["VoteType"]]
xml_data[["Contest"]][["VoteType"]][["Precincty"]]
xml_data[["Contest"]][["VoteType"]][["Precinct"]]
xml_data[["Contest"]][["VoteType"]]
as.list(xml_data[["Contest"]][["VoteType"]])
xml_data[["Contest"]][["VoteType"]][["Precinct"]]
xml_data[["Contest"]][["VoteType"]][["Precinct"]][["name"]]
xml_data[["Contest"]][["VoteType"]][["Precinct"]]
as.list(xml_data[["Contest"]][["VoteType"]][["Precinct"]])
xml_data[["Contest"]][["VoteType"]][[1]]
xml_data[["Contest"]][["VoteType"]][[2]]
xml_data[["Contest"]][["VoteType"]][Precinct]
xml_data[["Contest"]][["VoteType"]]["Precinct"]
xml_data[["Contest"]]
xml_data[["Contest"]][1]
xml_data[["Contest"]][[1]]
xml_data
View(xml_data)
unlist(xml_data[["ElectionResult"]][["Contest"]]
)
unlist(xml_data[["ElectionResult"]][["Contest"]][["Choice"]])
xml_data[["ElectionResult"]][["Contest"]][["Choice"]]
xml_data[["Contest"]]
unlist(xml_data[["Contest"]][["Choice"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]])
unlist(xml_data[["Contest"]])
unlist(xml_data[["Contest"]][["Choice"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]][["Precinct"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]][
names(xml_data[["Contest"]][["Choice"]][["VoteType"]]) == "Precinct.name"])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]][["Precinct"]])
data
test
View(test)
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]][["Precinct"]][["name"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]][["Precinct"]])
unlist(xml_data[["Contest"]][["Choice"]][["VoteType"]])
unlist(xml_data[["Contest"]])
test
unlist(xml_data[["Contest"]])
View(unlist(xml_data[["Contest"]]))
View(unlist(xml_data))
htmlTreeParse("http://results.enr.clarityelections.com/NJ/Monmouth/74819/Web02.194526/#/")
url <- "http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/Web01/en/summary.html#"
?stringr
str_extract(url,[A-Z][A-Z])
str_extract(url,"[A-Z][A-Z]")
str_extract(url,"[A-Z][A-Z]/")
str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/")
str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
ID <- str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
paste("http://results.enr.clarityelections.com/",ID,"/reports/summary.zip")
paste("http://results.enr.clarityelections.com/",ID,"/reports/summary.zip")
paste("http://results.enr.clarityelections.com/",
ID,"/reports/summary.zip", sep = '')
read_clarity <- function(url, destfile, Web01 = FALSE) {
if (Web01 = TRUE) {
ID <- str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
url <- paste("http://results.enr.clarityelections.com/",
ID,"/reports/summary.zip", sep = '')
}
download.file(url, destfile)
unzip(destfile)
}
read_clarity <- function(url, destfile, Web01 = FALSE) {
if (Web01 = TRUE) {
ID <- str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
url <- paste("http://results.enr.clarityelections.com/",
ID,"/reports/summary.zip", sep = '')
}
download.file(url, destfile)
unzip(destfile)
}
read_clarity <- function(url, destfile, Web01 = FALSE) {
if (Web01 = TRUE) {
ID <- str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
url <- paste("http://results.enr.clarityelections.com/",
ID,"/reports/summary.zip", sep = '')
}
download.file(url, destfile)
unzip(destfile)
}
read_clarity <- function(url, destfile, Web01 = FALSE) {
if (Web01 == TRUE) {
ID <- str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
url <- paste("http://results.enr.clarityelections.com/",
ID,"/reports/summary.zip", sep = '')
}
download.file(url, destfile)
unzip(destfile)
}
read_clarity(url, "Glouc.zip", Web01 = TRUE)
?switch
report <- "csv"
switch(report, csv = "/reports/summary.zip",xls = "/reports/detailxls.zip")
read_clarity <- function(url, destfile, Web01 = FALSE, report = NULL) {
if (Web01 == TRUE) {
ID <- str_extract(url,"[A-Z][A-Z]/[A-Za-z]+/[0-9]+/[0-9]+")
url <- paste("http://results.enr.clarityelections.com/",ID,
switch(report,
csv = "/reports/summary.zip",
xls = "/reports/detailxls.zip",
txt = "/reports/detailtxt.zip",
xml = "/reports/detailxml.zip"), sep = '')
}
download.file(url, destfile)
unzip(destfile)
}
read_clarity(url,"glouc.zip", Web01 = TRUE, report = "xls")
document()
