clarity <- "http://results.enr.clarityelections.com/NJ/Gloucester/64655/183917/Web01/en/summary.html"
clarity
read_html(clarity)
library(XML)
;ibrary(rvest)
library(rvest)
read_html(clarity)
page <- read_html(clarity)
html_table(page)
html_table(page)[[1]]
html_table(page)[1]
clarity
page <- read_html(clarity)
oage
page
html_table(page, fill = TRUE)[[1]]
html_table(page, fill = TRUE)
library(jsonlite)
fromJSON(clarity)
xmlTreeParse(clarity)
install.packages('VG')
install.packages('V8')
?cor
z <- c(1:10, NA)
coef_det <- function(x, na.rm = FALSE) {}
coef_det <- function(x, na.rm = FALSE) {
sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE) }
coef_det(z)
coef_det <- function(x, omit_NA = FALSE) {
sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE) }
coef_det <- function(x, omit_na = FALSE) {
sd(x, omit_na = TRUE)/mean(x, omit_na = TRUE) }
coef_det(z)
coef_det <- function(x, omit_na = FALSE) {
sd(x, na.rm = omit_na)/mean(x, na.rm = omit_na) }
coef_det(z)
coef_det(z, TRUE)
library(jsonlite)
fromJSON("http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/Web01/en/summary.html")
?fromJSON
library(tabulizer)
fromJSON("https://mcgisweb.co.middlesex.nj.us/elections/historic/results?e=2013-11-5")
extract_tables("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181")
summary <- extract_tables("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181")
summary[1]
View(summary[1])
View(summary[[1]])
summary <- extract_tables("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181", guess = FALSE)
View(summary[[1]])
View(summary[[2]])
summary <- extract_tables("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181")
View(summary[[1]])
View(summary[[2]])
View(summary[[3]])
View(summary[[4]])
fromJSON("http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/Web01/en/summary.html")
install.packages("rjson")
fromJSON("http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/Web01/en/summary.html")
length(summary)
read_html
library(tabulizer)
library(tidyverse)
read_html
??read_html
library(XML)
htmlTreeParse("http://results.enr.clarityelections.com/NJ/Gloucester/71871/191307/Web01/en/summary.html")
select(summary[[1]], contains("%") | contains("Total"))
?select
select(summary[[1]], contains("%"), contains("Total"))
summary <- extract_tables("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181", method = "data.frame")
View(summary[[1]])
?extract_tables
select(summary[[1]], contains("%"), contains("Total"))
select(summary[[1]], contains("%") | contains("Total"))
summary <- extract_tables("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181")
select(summary[[1]], contains("%"))
new <- as.data.frame(do.call("rbind", tab1), stringsAsFactors = FALSE)
new <- as.data.frame(do.call("rbind", summary), stringsAsFactors = FALSE)
View(summary[[1]])
?class
class(summary[[1]])
?select
any("%" %in% summary[[1]])
summary[[1]]][1]
summary[[1]][1]
summary[[1]]
summary[[1]][1,]
summary[[1]][,1]
any("%" %in% summary[[1]][,1])
any("%" %in% summary[[1]][,3])
any("Total" %in% summary[[1]][,1])
any(0 %in% summary[[1]][,3])
Filter(function(u) any(grepl('Total|%',u)), summary[[1]])
Filter(function(u) any(c('Total','%') %in% u), summary[[1]])
Filter(function(u) any(grepl('Total|%',u)), summary[[1]])
?grepl
?Filter
df1[sapply(summary, function(x) any(x %in% c("Total", "%")))]
summary[sapply(summary, function(x) any(x %in% c("Total", "%")))]
summary[sapply(summary, function(x) any(c("Total", "%") %in% x))]
summary[sapply(summary, function(x) any(c("Total") %in% x))]
Filter(function(x) mean(x == 'Total') > 1, summary[[1]])
Filter(function(x) grepl(x == 'Total') > 1, summary[[1]])
Filter(function(x) grepl('Total',x) > 1, summary[[1]])
Filter(function(u) any(grepl('Total|%',u)), summary[[1]])
any(grepl('Total|%',summary[[1]][,1]
)
)
any(grepl('Total|%',summary[[1]][,3]))
any(grepl('Total|%',summary[[1]][,2]))
any(grepl('Total|%',summary[[1]]))
?apply
apply(summary[[1]],any(grepl('Total|%'))
)
apply(summary[[1]],2,any(grepl('Total|%')))
apply(summary[[1]],2, function(x) any(grepl('Total|%',x)))
good <- apply(summary[[1]],2, function(x) any(grepl('Total|%',x)))
summary[[1]][good]
summary[[1]][,good]
View(summary[[1]][good])
View(summary[[1]][,good])
View(summary[[2]][,good])
good2 <- apply(summary[[2]],2, function(x) any(grepl('Total|%',x)))
View(summary[[2]][,good2])
read_summary <- function(url) {
pages <- tabulizer::extract_tables("url")
for (i in 1:length(pages)) {
# Drop whitespace columns that do not contain candidates or vote #s
columns <- apply(summary[[i]],2, function(x) any(grepl('Total|%',x)))
pages[[i]] <- pages[[i]][,columns]
}
}
read_summary(http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181)
read_summary("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181")
read_summary("http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181")
url
my_url <- "http://www.passaiccountynj.org/ArchiveCenter/ViewFile/Item/1181"
read_summary(my_url)
read_summary(my_url)
read_summary(my_url)
)
pages <- tabulizer::extract_tables(my_url)
for (i in 1:length(pages)) {
# Drop whitespace columns that do not contain candidates or vote #s
columns <- apply(summary[[i]],2, function(x) any(grepl('Total|%',x)))
pages[[i]] <- pages[[i]][,columns]
}
pages
View(pages[[1]])
read_summary <- function(url) {
pages <- tabulizer::extract_tables(url)
}
read_summary(my_url)
pages
read_summary <- function(url) {
pages <- tabulizer::extract_tables(url)
#  for (i in 1:length(pages)) {
#    # Drop whitespace columns that do not contain candidates or vote #s
#    columns <- apply(summary[[i]],2, function(x) any(grepl('Total|%',x)))
#    pages[[i]] <- pages[[i]][,columns]
#  }
print("Test")
}
read_summary(my_url)
read_summary <- function(url) {
pages <- tabulizer::extract_tables(url)
for (i in 1:length(pages)) {
# Drop whitespace columns that do not contain candidates or vote #s
columns <- apply(summary[[i]],2, function(x) any(grepl('Total|%',x)))
pages[[i]] <- pages[[i]][,columns]
}
print("Test")
}
read_summary(my_url)
read_summary <- function(url) {
pages <- tabulizer::extract_tables(url)
for (i in 1:length(pages)) {
# Drop whitespace columns that do not contain candidates or vote #s
columns <- apply(summary[[i]],2, function(x) any(grepl('Total|%',x)))
pages[[i]] <- pages[[i]][,columns]
}
}
read_summary(my_url)
?stack
fourcol <- summary[[1]][,good]
fourcol
c(fourcol)
?list
stacked <- vector("dataframe", 2)
stacked <- vector("data.frame", 2)
stacked <- vector("matrix", 2)
?data.frame
fourcol[1]
fourcol[,1]
c(fourcol[,1],fourcol[,3]
)
data.frame(c(fourcol[,1],fourcol[,3]))
data.frame(c(fourcol[,1],fourcol[,3]),c(fourcol[,2],fourcol[,4]))
View(data.frame(c(fourcol[,1],fourcol[,3]),c(fourcol[,2],fourcol[,4])))
View(data.frame(X1 = c(fourcol[,1],fourcol[,3]),X2 = c(fourcol[,2],fourcol[,4])))
